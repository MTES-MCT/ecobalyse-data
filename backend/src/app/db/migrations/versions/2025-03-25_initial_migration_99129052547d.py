# type: ignore
"""initial migration

Revision ID: 99129052547d
Revises:
Create Date: 2025-03-25 16:00:00.417129

"""

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from advanced_alchemy.types import (
    GUID,
    ORA_JSONB,
    DateTimeUTC,
    EncryptedString,
    EncryptedText,
)
from alembic import op
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    pass

__all__ = [
    "downgrade",
    "upgrade",
    "schema_upgrades",
    "schema_downgrades",
    "data_upgrades",
    "data_downgrades",
]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = "99129052547d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "component",
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_component")),
    )
    op.create_table(
        "process",
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("display", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_process")),
    )
    op.create_table(
        "component_element",
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("component_id", sa.GUID(length=16), nullable=False),
        sa.Column("material_id", sa.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["component.id"],
            name=op.f("fk_component_element_component_id_component"),
        ),
        sa.ForeignKeyConstraint(
            ["material_id"],
            ["process.id"],
            name=op.f("fk_component_element_material_id_process"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_component_element")),
    )
    op.create_table(
        "component_element_transform_table",
        sa.Column("component_element_id", sa.GUID(length=16), nullable=False),
        sa.Column("process_id", sa.GUID(length=16), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_element_id"],
            ["component_element.id"],
            name=op.f(
                "fk_component_element_transform_table_component_element_id_component_element"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["process.id"],
            name=op.f("fk_component_element_transform_table_process_id_process"),
        ),
        sa.PrimaryKeyConstraint(
            "component_element_id",
            "process_id",
            name=op.f("pk_component_element_transform_table"),
        ),
    )
    # ### end Alembic commands ###


def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("component_element_transform_table")
    op.drop_table("component_element")
    op.drop_table("process")
    op.drop_table("component")
    # ### end Alembic commands ###


def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""


def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
